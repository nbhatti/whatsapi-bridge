name: Preview Deployment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, closed]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  preview-vercel:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: ./frontend
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: ./frontend
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Preview
        id: deploy
        working-directory: ./frontend
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';
            const comment = `## ðŸš€ Preview Deployment Ready!
            
            Your preview deployment is available at:
            **[${deploymentUrl}](${deploymentUrl})**
            
            Built with commit: \`${context.sha.substring(0, 7)}\`
            
            > This preview will be automatically updated when you push new commits to this PR.`;
            
            // Check if there's already a comment from this workflow
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment Ready!')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  cleanup-vercel:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
      - name: Cleanup Preview Deployment
        run: |
          echo "Preview deployment cleanup would happen here"
          echo "Vercel automatically handles this for closed PRs"
