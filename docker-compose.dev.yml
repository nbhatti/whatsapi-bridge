services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: whatsapp-api-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./src:/usr/src/app/src
      - ./dist:/usr/src/app/dist
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: ["npm", "run", "dev"]
    networks:
      - whatsapp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: whatsapp-frontend-dev
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - whatsapp-network
    depends_on:
      - api

  postgres:
    image: postgres:16
    container_name: whatsapp-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=whatsapi
      - POSTGRES_USER=${POSTGRES_USER:-whatsapi_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-whatsapi_password}
    env_file:
      - .env
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatsapp-network

  redis:
    image: redis:7-alpine
    container_name: whatsapp-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatsapp-network

volumes:
  redis_data_dev:
  postgres_data_dev:

networks:
  whatsapp-network:
    driver: bridge
